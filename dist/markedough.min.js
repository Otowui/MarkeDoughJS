class e{static initializedForms=new Map;constructor(e,t,o,s={}){this.mktoDomain=e,this.mktoID=t,this.formID=o,this.options=s,this.form=null}static init(t,o,s,i={}){const n=`${t}-${o}-${s}`;if(window.__otoFormsLoaded?.has(n))return void(i.debug&&console.warn(`⚠️ MarkeDough: Form ${s} is already initialized. Skipping.`));window.__otoFormsLoaded=window.__otoFormsLoaded||new Set,window.__otoFormsLoaded.add(n);const r=new e(t,o,s,i);r.init(),e.initializedForms.set(n,r)}init(){this.attachMktoEvents()}attachMktoEvents(){if(!window.MktoForms2)return console.error("⚠️ MktoForms2 is not available. Retrying..."),void setTimeout((()=>this.attachMktoEvents()),500);MktoForms2.whenRendered((e=>{this.options.debug&&console.debug(`✅ Form ${this.formID} is rendered.`),this.onFormRendered(e)})),MktoForms2.whenReady((e=>{this.options.debug&&console.debug(`✅ Form ${this.formID} is fully loaded.`),this.onFormReady(e)}))}onFormRendered(e){this.options.debug&&console.debug(`⚡️ Running onFormRendered() modifications on ${this.formID}.`)}onFormReady(e){this.form=e,this.options.debug&&console.debug(`⚡️ Running onFormReady() modifications on ${this.formID}.`),this.formSubmitting=!1,this.formSubmitted=!1,this.cleanUpMktoElements(e),this.setupCSSReset(e),this.hideSpecifiedElements(e),this.addCssHelpers(e),this.hideLabelsForFields(e),this.processCheckboxOptions(),this.processRadioOptions(),this.replaceTokensInForm(e),this.initCustomLabels(e),this.refactorNumberInputs(e),this.options.dto?this.setupPrefill(e):this.setupUpIntlTelInput(e),this.processUrlParams(e),this.applyTranslations(e),this.setupUploadCare(e),this.executeCustomBehaviorsOnFormReady(e),this.showForm(e),this.setupDeactivation(e),this.options.dataLayerConfig.trackFormReady&&this.pushToDataLayer(this.options.dataLayerConfig.eventName+"Ready"),this.options.clearMunchkin&&this.form.addHiddenFields({_mkt_trk:"",mkt_tok:""}),e.onValidate((t=>{if(this.options.debug&&console.log("🚀 Validating form before submission..."),this.formSubmitting)return void console.warn("⚠️ Preventing duplicate validation.");this.formSubmitting=!0,e.submittable(!1);let o=[];if(this.options.intlTelInput&&this.options.intlTelInputFields&&Array.isArray(this.options.intlTelInputFields)){const t=e.getFormElem()[0];this.options.intlTelInputFields.forEach((e=>{const o=t.querySelector(`[name="${e}"]`);if(o&&o.intlTelInputInstance){const t=o.intlTelInputInstance.getNumber();console.debug(`📞 Formatted Phone Number for ${e}: ${t}`),o.value=t}else console.warn(`⚠️ intlTelInput instance not found for: ${e}`)}))}this.options.honeypot&&o.push(this.setupHoneypotValidation(e)),this.options.emailVerify&&o.push(this.setupEmailValidation(e)),Promise.all(o).then((t=>{const o=undefined;if(!t.every((e=>e)))return console.error("⛔ Validation failed. Submission blocked."),void(this.formSubmitting=!1);console.log("✅ Final submittable state: true"),e.submittable(!0),setTimeout((()=>{e.getFormElem()[0].checkValidity()?(this.options.debug&&console.log("✅ All validations passed, submitting form..."),e.getFormElem()[0].dispatchEvent(new Event("submit",{bubbles:!0}))):(console.warn("⚠️ Form still invalid, submission blocked."),this.formSubmitting=!1)}),100)})).catch((t=>{console.error("⚠️ Validation error:",t),e.submittable(!1),this.formSubmitting=!1}))})),e.onSubmit((e=>{this.options.clearMunchkin&&this.form.vals({_mkt_trk:"",mkt_tok:""}),setTimeout((()=>{this.submissionTriggered=!1}),500)})),e.onSuccess(((t,o)=>{if(this.formSubmitted)return console.warn("⚠️ Preventing duplicate success handling."),!1;if(this.formSubmitted=!0,this.options.debug&&console.log("🚀 Form submission successful. Handling follow-up..."),this.executeCustomBehaviorsOnFormSuccess(e),!this.options.followUp)return!0;if(this.options.followUpUrl)return console.log(`🔗 Redirecting to follow-up URL: ${this.options.followUpUrl}`),setTimeout((()=>{window.location.href=this.options.followUpUrl}),500),!1;if(this.options.followUpMsg){const t=e.getFormElem()[0];t.style.display="none";const o=document.createElement("div");return o.innerHTML=this.options.followUpMsg,t.parentElement.appendChild(o),console.log("Displayed follow-up message instead of redirection."),!1}}))}hideForm(e){const t=undefined;e.getFormElem()[0].style.display="none",this.options.debug&&console.debug(`Form ${this.formID} is now hidden.`)}showForm(e){const t=e.getFormElem()[0];t.style.display="",t.parentElement&&t.parentElement.style.removeProperty("display"),this.options.debug&&console.debug(`Form ${this.formID} is now visible.`)}setupCSSReset(e){if(!this.options.cssReset)return;const t=e.getFormElem()[0];this.removeInlineStyles(t),this.disableMarketoStyles(t),this.removeEmbeddedStyles(t),this.removeMktoHasWidth(t),this.injectStylesheet(),this.options.moreStyles||t.setAttribute("data-style","oto"),this.observeMktoFormStyles(t),this.options.debug&&console.debug(`CSS Reset applied to Form ${this.formID}`)}injectStylesheet(){(this.options.cssStylesheet||this.options.cssStyle||this.options.cssInlineStyle)&&((this.options.cssStyle&&Object.keys(this.options.cssStyle).length>0||this.options.cssInlineStyle&&""!==this.options.cssInlineStyle.trim())&&this.injectCSSVariables(),Array.isArray(this.options.cssStylesheet)&&this.options.cssStylesheet.forEach((e=>{if(!document.querySelector(`link[href="${e}"]`)){const t=document.createElement("link");t.rel="stylesheet",t.href=e,document.head.appendChild(t),this.options.debug&&console.log(`Applied external CSS: ${e}`)}})))}injectCSSVariables(){const e=undefined;if(document.getElementById("otoFormCustomStyles"))return;let t=":root {\n";if(this.options.cssStyle&&Object.keys(this.options.cssStyle).length>0)for(const[e,o]of Object.entries(this.options.cssStyle))t+=`  --otoform-${e}: ${o};\n`;t+="}",this.options.cssInlineStyle&&"string"==typeof this.options.cssInlineStyle&&""!==this.options.cssInlineStyle.trim()&&(t+=`\n${this.options.cssInlineStyle}`);const o=document.createElement("style");o.id="otoFormCustomStyles",o.textContent=t,document.head.appendChild(o),this.options.debug&&console.log("Injected CSS Variables & Inline Styles:",{variables:this.options.cssStyle,inlineStyles:this.options.cssInlineStyle})}removeEmbeddedStyles(e){const t=e.querySelectorAll("style");t.forEach((e=>e.remove())),this.options.debug&&console.debug(`Removed ${t.length} embedded <style> tags inside the form.`)}removeInlineStyles(e){const t=undefined;Array.from(e.querySelectorAll("[style]")).forEach((e=>{e.closest(".mktoHtmlText")&&!e.classList.contains("mktoHtmlText")||e.removeAttribute("style")})),e.closest(".mktoHtmlText")||e.removeAttribute("style")}removeMktoHasWidth(e){const t=e.querySelectorAll(".mktoHasWidth");e.classList.contains("mktoHasWidth")&&e.classList.remove("mktoHasWidth"),t.forEach((e=>e.classList.remove("mktoHasWidth"))),this.options.debug&&console.debug(`Removed .mktoHasWidth from ${t.length+(e.classList.contains("mktoHasWidth")?1:0)} elements.`)}disableMarketoStyles(e){try{const t=undefined;Array.from(document.styleSheets).forEach((t=>{try{(t.href&&t.href.includes("forms2")||e.contains(t.ownerNode))&&(t.disabled=!0)}catch(e){this.options.debug&&console.warn("⚠️ Could not access stylesheet:",e)}}))}catch(e){this.options.debug&&console.warn("⚠️ Error disabling Marketo styles:",e)}}addCssHelpers(e){if(!this.options.cssReset)return;const t=e.getFormElem()[0];t.querySelectorAll("fieldset").forEach((e=>{const t=e.querySelector("legend");if(!t||!t.textContent.trim())return;const o=this.slugify(t.textContent.trim()),s=e.closest(".mktoFormRow"),i=e.closest(".mktoFormCol");s&&s.classList.add(`otoform-row-fieldset-${o}`),i&&i.classList.add(`otoform-col-fieldset-${o}`),this.options.debug&&console.log(`Added fieldset class "otoform-row-fieldset-${o}"`)})),t.querySelectorAll(".mktoFormRow").forEach((e=>{if(e.querySelector("fieldset"))return;const t=e.querySelectorAll("input, select, textarea"),o=new Set([...t].map((e=>this.slugify(e.name||""))));o.size&&(e.classList.add(`otoform-row-${[...o].join("-")}`),this.options.debug&&console.log(`Added class "otoform-row-${[...o].join("-")}" to row.`))})),t.querySelectorAll(".mktoFormCol").forEach((e=>{if("fieldset"===e.tagName.toLowerCase())return;const t=e.querySelector("input, select, textarea");if(t){const o=this.slugify(t.name||"");o&&(e.classList.add(`otoform-col-${o}`),this.options.debug&&console.log(`Added class "otoform-col-${o}" to column.`))}})),t.querySelectorAll(".mktoFieldWrap").forEach((e=>{const t=e.querySelector("input, select, textarea");if(t){const o=this.slugify(t.name||"");o&&(e.classList.add(`otoform-field-${o}`),this.options.debug&&console.log(`Added class "otoform-field-${o}" to field wrapper.`))}})),t.querySelectorAll(".mktoCheckboxList").forEach((e=>{const t=e.querySelector("input[type='checkbox']");if(t){const o=this.slugify(t.name||"");o&&(e.classList.add(`otoform-checkboxlist-${o}`),this.options.debug&&console.log(`Added class "otoform-checkboxlist-${o}" to checkbox list.`))}})),t.querySelectorAll(".mktoRadioList").forEach((e=>{const t=e.querySelector("input[type='radio']");if(t){const o=this.slugify(t.name||"");o&&(e.classList.add(`otoform-radiolist-${o}`),this.options.debug&&console.log(`Added class "otoform-radiolist-${o}" to radio list.`))}})),t.querySelectorAll(".mktoCheckboxList").forEach((e=>{const t=e.querySelectorAll("label"),o=undefined;if(Array.from(t).some((e=>""===e.textContent.trim()&&""===e.innerHTML.trim()))){const t=e.closest(".mktoFieldWrap");t&&(t.classList.add("otoform-single-checkbox"),this.options.debug&&console.log('Added class "otoform-single-checkbox" to field wrap.'))}})),this.options.debug&&console.log("CSS helpers added to form.")}observeMktoFormStyles(e){const t=undefined;new MutationObserver((t=>{t.forEach((t=>{"style"===t.attributeName&&e.style.width&&(e.style.removeProperty("width"),this.options.debug&&console.debug("Removed inline width style from .mktoForm"))}))})).observe(e,{attributes:!0,attributeFilter:["style"]}),this.options.debug&&console.debug("MutationObserver started to prevent Marketo from injecting inline width.")}setupUpIntlTelInput(e){if(!this.options.intlTelInput)return;if("function"!=typeof window.intlTelInput)return void(this.options.debug&&console.error("intlTelInput library not loaded."));const t=e.getFormElem()[0],o=this.options.intlTelInputConfig||{},s=e=>"1"===e||1===e||!0===e,i={initialCountry:o.initialCountry||"auto",strictMode:s(o.strictMode),nationalMode:s(o.nationalMode),geoIpLookup:s(o.geoIpLookup)?function(e){fetch(o.geoIpLookupApi||"https://ipinfo.io/json?token=InsertApiKeyHere").then((e=>e.json())).then((t=>{e(t[o.geoIpLookupApiResponseKey]||o.geoIpLookupApiResponseFallback||"us")})).catch((()=>{e(o.geoIpLookupApiResponseFallback||"us")}))}:null,allowDropdown:s(o.allowDropdown),showFlags:s(o.showFlags),separateDialCode:s(o.separateDialCode)};if(this.options.debug&&console.log("IntlTelInput configuration:",i),this.options.intlTelInputFields&&Array.isArray(this.options.intlTelInputFields)&&this.options.intlTelInputFields.forEach((e=>{const o=t.querySelector(`[name="${e}"]`);o?(o.intlTelInputInstance=window.intlTelInput(o,i),this.options.debug&&console.log(`intlTelInput initialized for field: ${e}`)):this.options.debug&&console.warn(`Field not found for intlTelInput: ${e}`)})),o.CountrySync&&o.CountrySyncSelector){const e=t.querySelector(`[name="${o.CountrySyncSelector}"]`);if(e){const o=window.intlTelInput.getCountryData();e.innerHTML="",o.forEach((t=>{const o=document.createElement("option");o.value=t.iso2,o.text=t.name,e.appendChild(o)}));const s=this.options.intlTelInputFields[0],i=t.querySelector(`[name="${s}"]`);if(i&&i.intlTelInputInstance){const t=i.intlTelInputInstance;e.value=t.getSelectedCountryData().iso2,i.addEventListener("countrychange",(()=>{e.value=t.getSelectedCountryData().iso2})),e.addEventListener("change",(()=>{t.setCountry(e.value)}))}}else this.options.debug&&console.warn(`Country Sync Selector element not found: ${o.CountrySyncSelector}`)}}setupUploadCare(e){if(!this.options.uploadCare)return;this.options.debug&&console.log("⚡️ Setting up UploadCare");const t=e.getFormElem()[0];if(this.options.uploadCareTarget){function o(e){var t=document.createElement("textarea");return t.innerHTML=e,t.value}const s=this.options.uploadCareTarget,i=o(this.options.uploadCareConfig);let n=t.querySelector(`[name="${s}"]`);n.classList.add("oto-visually-hidden");let r=n?.closest(".mktoFieldWrap");if(r.classList.add("oto-force-space-bottom"),!document.querySelector("uc-file-uploader-minimal")||!document.querySelector("uc-file-uploader-regular")){const a=document.createElement("div");a.classList.add("mktoFormRow"),a.classList.add("otoform-row-uploadcare"),a.innerHTML=`${i}<uc-upload-ctx-provider ctx-name="my-uploader"></uc-upload-ctx-provider>`;const c=t.querySelector(`[name="${s}"]`)?.closest(".mktoFormRow");c?c.insertAdjacentElement("afterend",a):t.insertAdjacentElement("afterend",a)}const l=document.querySelector("uc-upload-ctx-provider[ctx-name='my-uploader']");if(!l)return void console.error("Uploadcare context provider element not found!");l.addEventListener("common-upload-success",(e=>{const t=e.detail.successEntries;if(!t||0===t.length)return;const o=t.map((e=>e.cdnUrl));console.log("Files Uploaded:",o),n.value=o.join(", ")}))}}setupDeactivation(e){if(!this.options.deactivate)return;const t=e.getFormElem()[0],o=t.parentElement;if(t.style.display="none",this.options.deactivateMessage){const e=document.createElement("div");e.innerHTML=this.options.deactivateMessage,o.appendChild(e)}this.options.debug&&console.debug(`Form ${this.formID} is deactivated and replaced with a message.`)}setupPrefill(e){if(!this.options.dto)return;const t=this.options.dtoSrc,o=this.options.dtoOriginUrl,s=this.options.dtoTargetUrls;if(!(t&&o&&s&&Array.isArray(s)))return void(this.options.debug&&console.warn("⚠️ DTO configuration is incomplete. Prefill aborted."));this.options.debug&&console.log("Initializing SimpleDTO for form prefill...");const i=new SimpleDTO({debug:this.options.debug,mode:"receive",transport:"message",messageSource:o,messageTarget:s,dataSrc:t,cb:(t,o)=>{this.options.debug&&console.debug("🗂️ Marketo Fields received:",o),e.setValuesCoerced(o),this.onPrefillReadyTriggerLeadActions(e,o),i.cleanup()}})}onPrefillReadyTriggerLeadActions(e,t){this.options.debug&&console.log("⚡️Lead actions triggered after DTO prefill"),this.setupUpIntlTelInput(e),this.executeCustomBehaviorsOnFormPrefill(e),this.options.notYou&&t.Email&&this.setupNotYouButton()}setupEmailValidation(e){return new Promise((t=>{if(!this.options.emailVerify||!this.options.emailVerifyAPI)return t(!0);const o=this.options.emailVerifyAPI,s=o.fieldName||"Email",i=e.getFormElem()[0].querySelector(`[name="${s}"]`);if(!i)return this.options.debug&&console.warn(`⚠️ Email field not found: ${s}`),t(!0);if(!i.value||!i.value.includes("@")||!i.value.includes("."))return this.markInvalid(i,"Invalid email format."),t(!1);const n=this,r=Object.keys(o.action)[0]||"verify",l=o.action[r]||{},a={checkMX:"checkmx",checkCustomBlacklist:"checkblacklist",checkFreeEmails:"checkfreelist",checkDisposableEmails:"checkdisposablelist",checkWhitelist:"checkwhitelist"},c=Object.entries(l).filter((([e,t])=>void 0!==a[e]&&"boolean"==typeof t)).map((([e,t])=>`${a[e]}=${t?"true":"false"}`)).join("&"),d=`${o.endpoint}?key=${o.hash}&action=${r}&${c}&eml=${encodeURIComponent(i.value)}`,u=new XMLHttpRequest;u.open("GET",d,!0),u.responseType="json",u.onload=function(){if(200===u.status){const o=u.response;if(console.debug(`🚀 Email Validation API Response: ${JSON.stringify(o,null,2)}`),o&&Array.isArray(o)&&o.length>0){const s=o[0];"1"===s.valid?(e.submittable(!0),n.markValid(i),t(!0)):(console.error(`🚨 Invalid Email Detected: ${s.msg}`),e.submittable(!1),n.markInvalid(i,s.msg),t(!1))}else console.error("⚠️ Invalid API response format:",o),t(!0)}else console.error("⚠️ Validation API error:",u.status,u.statusText),t(!0)},u.onerror=function(){console.error("⚠️ Network error during email validation."),t(!0)},u.send()}))}validateEmailField(e,t){return new Promise((o=>{if(!e.value||!e.value.includes("@")||!e.value.includes("."))return this.markInvalid(e,"Invalid email format."),t.submittable(!1),o(!1);const s=this,i=this.options.emailVerifyAPI,n=Object.keys(i.action)[0]||"verify",r=i.action[n]||{},l={checkMX:"checkmx",checkCustomBlacklist:"checkblacklist",checkFreeEmails:"checkfreelist",checkDisposableEmails:"checkdisposablelist",checkWhitelist:"checkwhitelist"},a=Object.entries(r).filter((([e,t])=>void 0!==l[e]&&"boolean"==typeof t)).map((([e,t])=>`${l[e]}=${t?"true":"false"}`)).join("&"),c=`${i.endpoint}?key=${i.hash}&action=${n}&${a}&eml=${encodeURIComponent(e.value)}`,d=new XMLHttpRequest;d.open("GET",c,!0),d.responseType="json",d.onload=function(){if(200===d.status){let i;try{i=d.response}catch(e){return console.error("❌ JSON Parsing Error:",e),t.submittable(!1),o(!1)}if(console.debug("🚀 Email Validation API Response:",JSON.stringify(i,null,2)),i&&Array.isArray(i)&&i.length>0){const n=i[0];"1"===n.valid?(s.markValid(e),t.submittable(!0),o(!0)):(console.warn("🚨 Invalid Email Detected:",n.msg),s.markInvalid(e,n.msg||"Please enter a valid company email."),t.submittable(!1),o(!1))}else console.error("❌ Unexpected API Response Format:",i),t.submittable(!1),o(!1)}else console.error("❌ API Request Failed:",d.status,d.statusText),t.submittable(!1),o(!1)},d.onerror=function(){console.error("❌ Network Error During Email Validation."),t.submittable(!1),o(!1)},d.send()}))}setupErrorHideEvents(){const e=document.querySelector(".mktoForm");if(!e)return;const t=()=>{const o=undefined;e.querySelectorAll(".mktoError").forEach((e=>{e.style.opacity="0",setTimeout((()=>e.remove()),300)})),e.querySelectorAll(".customInvalid").forEach((e=>{e.classList.remove("customInvalid","mktoInvalid")})),e.removeEventListener("click",t)};e.addEventListener("click",t)}markValid(e){e.classList.remove("customInvalid","mktoInvalid"),e.classList.add("mktoValid"),e.setAttribute("aria-invalid","false"),MktoForms2.$(e).siblings(".mktoError").remove(),this.options.debug&&console.log(`Validation passed for ${e.name}`)}markInvalid(e,t){e.classList.add("customInvalid","mktoInvalid"),e.classList.remove("mktoValid"),e.setAttribute("aria-invalid","true");const o=e.parentElement.querySelector(".mktoError");o&&o.remove();const s=document.createElement("div");s.classList.add("mktoError"),s.style.opacity="0",s.style.transition="opacity 0.3s ease-in-out";const i=document.createElement("div");i.classList.add("mktoErrorArrowWrap");const n=document.createElement("div");n.classList.add("mktoErrorArrow");const r=document.createElement("div");r.classList.add("mktoErrorMsg"),r.setAttribute("id","ValidMsgTitle"),r.setAttribute("role","alert"),r.setAttribute("tabindex","-1"),r.textContent=t,i.appendChild(n),s.appendChild(i),s.appendChild(r),e.parentElement.appendChild(s),requestAnimationFrame((()=>{const o=e.getBoundingClientRect(),i=s.getBoundingClientRect();s.style.position="absolute",s.style.top=`${e.offsetTop+e.offsetHeight+5}px`,s.style.left=`${e.offsetLeft+e.offsetWidth/2}px`,s.style.transform="translateX(-50%)",s.style.zIndex="10",requestAnimationFrame((()=>{s.style.opacity="1"})),this.options.debug&&console.warn(`Validation failed: ${t}`)})),this.setupErrorHideEvents()}hideSpecifiedElements(e){const t=e.getFormElem()[0];if(this.options.hideFields&&Array.isArray(this.options.hideFields)&&this.options.hideFields.forEach((e=>{const o=t.querySelector(`[name="${e}"]`);if(o){const t=o.closest(".mktoFormRow");t&&(t.classList.add("oto-hidden"),this.options.debug&&console.log(`⚡️ Hiding row for field: ${e}`))}else this.options.debug&&console.warn(`Field not found for hiding: ${e}`)})),this.options.hideFieldsets&&Array.isArray(this.options.hideFieldsets)&&this.options.hideFieldsets.forEach((e=>{const o=undefined;t.querySelectorAll("legend").forEach((t=>{if(t.textContent.trim().toLowerCase()===e.toLowerCase()){const o=t.closest(".mktoFormRow");o&&(o.classList.add("oto-hidden"),this.options.debug&&console.log(`⚡️ Hiding fieldset with legend: "${e}"`))}}))})),this.options.hideLegends){const e=undefined;t.querySelectorAll("legend").forEach((e=>{e&&(e.classList.add("oto-hidden"),this.options.debug&&console.log(`⚡️ Hiding legend: "${e.textContent.trim()}"`))}))}}hideLabelsForFields(e){if(!this.options.hideLabels||!Array.isArray(this.options.hideLabels))return;const t=e.getFormElem()[0];this.options.hideLabels.forEach((e=>{let o;switch(e){case"text":case"url":case"number":case"email":case"tel":case"date":case"textarea":o=`input[type="${e}"], textarea`,t.querySelectorAll(o).forEach((e=>{this.hideLabelForInput(e)}));break;case"select":o="select",t.querySelectorAll(o).forEach((e=>{this.hideLabelForInput(e)}));break;case"checkboxlist":t.querySelectorAll(".mktoCheckboxList").forEach((e=>{this.hideAssociatedLabel(e)}));break;case"radiolist":t.querySelectorAll(".mktoRadioList").forEach((e=>{this.hideAssociatedLabel(e)}));break;default:return}}))}hideLabelForInput(e){const t=e.id?document.querySelector(`label[for="${e.id}"]`):null;t&&(t.classList.add("visually-hidden"),this.options.debug&&console.log("⚡️ Hiding label for input:",e.name))}hideAssociatedLabel(e){const t=e.querySelector("input");if(!t||!t.name)return;const o=e.closest(".mktoFieldWrap")?.querySelector(`label[for="${t.name}"]`);o&&(o.classList.add("visually-hidden"),this.options.debug&&console.log("⚡️ Hiding label for list with name:",t.name))}setupHoneypotValidation(e){return new Promise((t=>{const o=this.options.honeypot;if(!o)return t(!0);const s=undefined,i=e.getFormElem()[0].querySelector(`[name="${o}"]`);if(!i)return this.options.debug&&console.warn(`⚠️ Honeypot field not found: ${o}`),t(!0);""===i.value.trim()?(this.options.debug&&console.log("✅ Honeypot validation passed (empty field)."),t(!0)):(this.options.debug&&console.warn("🚨 Honeypot triggered! Submission blocked."),t(!1))}))}setupNotYouButton(){if(!this.options.notYou||!this.options.notYouHtml||!this.options.notYouAfterElem)return;const e=document.querySelector(this.options.notYouAfterElem);if(!e)return void(this.options.debug&&console.warn(`⚠️ Target element for "Not You?" not found: ${this.options.notYouAfterElem}`));const t=document.createElement("div");t.innerHTML=this.options.notYouHtml,e.insertAdjacentElement("afterend",t),this.options.debug&&console.log(`⚡️ Injected "Not You?" button after: ${this.options.notYouAfterElem}`);const o=document.querySelector("#not-you-button");o&&o.addEventListener("click",(e=>{e.preventDefault(),this.notYouHandler()}))}notYouHandler(){this.options.debug&&console.log("⚡️ Not You? button clicked. Clearing Marketo tracking cookie."),FormsPlus.util.DNS.climbDomains([],(e=>{FormsPlus.util.Cookies.remove(FormsPlus.strings.MARKETO_TRACKING_COOKIE,{domain:e,path:"/"})}));const e=new FormsPlus.util.URI.URI;e.removeSearch([FormsPlus.strings.MARKETO_EMAIL_ASSOCIATOR_TOKEN,FormsPlus.strings.MARKETO_FORM_DATA_CACHE]),document.location.href=e}refactorNumberInputs(e){if(!this.options.numberRefactore||!this.options.numberRefactoreItems)return;const t=e.getFormElem()[0];Object.entries(this.options.numberRefactoreItems).forEach((([e,o])=>{const s=t.querySelector(`input[name="${e}"][type="number"]`);if(!s)return void(this.options.debug&&console.warn(`⚠️ Number input "${e}" not found.`));const i="any"===o?"any":parseFloat(o)||1,n=s.getAttribute("min")||"",r=s.getAttribute("max")||"",l=s.value||"",a=document.createElement("span");a.classList.add("oto-num-stepper");const c=document.createElement("button");c.setAttribute("type","button"),c.textContent="−",c.addEventListener("click",(()=>this.stepperInput(s,-i,n)));const d=document.createElement("button");d.setAttribute("type","button"),d.textContent="+",d.addEventListener("click",(()=>this.stepperInput(s,i,r))),s.setAttribute("step",i),s.setAttribute("min",n),s.setAttribute("max",r),s.setAttribute("readonly","true"),s.value=l,s.parentNode.insertBefore(a,s),a.appendChild(c),a.appendChild(s),a.appendChild(d),this.options.debug&&console.log(`✅ Refactored number input "${e}" with step ${i}.`)}))}stepperInput(e,t,o){let s=parseFloat(e.value)||0;const i="any"===e.getAttribute("step")?1:parseFloat(e.getAttribute("step")),n=e.getAttribute("min")?parseFloat(e.getAttribute("min")):-1/0,r=e.getAttribute("max")?parseFloat(e.getAttribute("max")):1/0;let l=s+t;l<n&&(l=n),l>r&&(l=r),e.value=l}processRadioOptions(){const e=document.querySelector(".mktoForm");if(e)return!this.options.radios||Array.isArray(this.options.radios)&&0===this.options.radios.length?(e.querySelectorAll(".mktoRadioList").forEach((e=>{e.classList.contains("otoform-default-radios")||e.classList.add("otoform-default-radios")})),void(this.options.debug&&console.warn("⚠️ No specific radio configurations found. Applied 'otoform-default-radios' to all radio lists."))):void Object.keys(this.options.radios).forEach((t=>{const o=this.options.radios[t],s=e.querySelectorAll(`input[name="${t}"]`);0!==s.length?s.forEach((e=>{const s=e.closest(".mktoRadioList");s&&(o.style||o.inline||s.classList.add("otoform-default-radios"),o.inline&&s.classList.add("otoform-inline-radios"),"tabs"===o.style?s.classList.add("otoform-tabs-radios"):"square"===o.style?s.classList.add("otoform-square-radios"):s.classList.add("otoform-default-radios"),this.options.debug&&console.log(`⚡️ Processed radio group "${t}" with style: ${o.style||"default"}`))})):this.options.debug&&console.warn(`⚠️ No radios found for group: ${t}`)}))}processCheckboxOptions(){const e=document.querySelector(".mktoForm");if(e)return!this.options.checkBoxes||Array.isArray(this.options.checkBoxes)&&0===this.options.checkBoxes.length?(e.querySelectorAll(".mktoCheckboxList").forEach((e=>{e.classList.contains("otoform-default-checkboxes")||e.classList.add("otoform-default-checkboxes")})),void(this.options.debug&&console.warn("⚠️ No specific checkbox configurations found. Applied 'otoform-default-checkboxes' to all checkbox lists."))):void Object.keys(this.options.checkBoxes).forEach((t=>{const o=this.options.checkBoxes[t],s=e.querySelectorAll(`input[name="${t}"]`);0!==s.length?s.forEach((e=>{const s=e.closest(".mktoCheckboxList");s&&(o.style||o.inline||o.behavior||s.classList.add("otoform-default-checkboxes"),o.inline&&s.classList.add("otoform-inline-checkboxes"),"round"===o.style||"square"===o.style?this.initSwitches(e,o.style):s.classList.add("otoform-default-checkboxes"),"actAsRadio"===o.behavior&&this.initializeCheckboxGroupAsRadio(t))})):this.options.debug&&console.warn(`⚠️ No checkboxes found for group: ${t}`)}))}initSwitches(e,t){const o=e.closest(".mktoCheckboxList");if(!o)return;o.classList.contains("otoform-switches")?o.classList.add("otoform-classic"):o.classList.add("otoform-switches");const s=document.createElement("label");s.classList.add("otoform-switch"),e.parentNode.insertBefore(s,e),s.appendChild(e);const i=document.createElement("span");i.classList.add("otoform-slider",`otoform-slider-${t}`),s.appendChild(i),this.options.debug&&console.log(`Applied ${t} switch styling to checkbox:`,e.name)}initializeCheckboxGroupAsRadio(e){const t=document.querySelectorAll(`input[name="${e}"]`);if(0===t.length)return;t.forEach((e=>{e.addEventListener("click",(function(){t.forEach((t=>{t!==e&&(t.checked=!1)}))}))}));const o=Array.from(t).find((e=>e.checked));o&&t.forEach((e=>{e!==o&&(e.checked=!1)})),this.options.debug&&console.log(`Initialized radio-like behavior for checkbox group: ${e}`)}replaceTokensInForm(e){if(!this.options.updateTokens||"object"!=typeof this.options.updateTokens)return;const t=undefined,o=undefined;e.getFormElem()[0].querySelectorAll("*:not(script):not(style)").forEach((e=>{Object.keys(this.options.updateTokens).forEach((t=>{const o=this.options.updateTokens[t];1===e.childNodes.length&&e.childNodes[0].nodeType===Node.TEXT_NODE&&e.textContent.includes(t)&&(e.textContent=e.textContent.replace(t,o),this.options.debug&&console.log(`Replaced token "${t}" in element:`,e)),e.hasAttribute("value")&&e.getAttribute("value").includes(t)&&(e.setAttribute("value",e.getAttribute("value").replace(t,o)),this.options.debug&&console.log(`Replaced token "${t}" in input value:`,e)),e.hasAttribute("placeholder")&&e.getAttribute("placeholder").includes(t)&&(e.setAttribute("placeholder",e.getAttribute("placeholder").replace(t,o)),this.options.debug&&console.log(`Replaced token "${t}" in placeholder:`,e))}))}))}initCustomLabels(e){if(!this.options.customLabels||"object"!=typeof this.options.customLabels)return;const t=e.getFormElem()[0];Object.entries(this.options.customLabels).forEach((([e,o])=>{if(!e||!o)return;const s=t.querySelector(`label[for="${e}"]`);s?(s.innerHTML=o,this.options.debug&&console.log(`Updated label for "${e}" with custom content.`)):this.options.debug&&console.warn(`Label with for="${e}" not found.`)}))}applyTranslations(e){if(!this.options.translate||"json"!==this.options.translate)return;const t=document.documentElement.lang||"en",o=`${this.options.translateJson.folder}${t}.json`;this.options.debug&&console.log(`Loading translations from: ${o}`),fetch(o).then((e=>e.json())).then((e=>{Object.keys(e).forEach((t=>{const o=undefined;document.querySelectorAll(t).forEach((o=>{["INPUT","TEXTAREA"].includes(o.tagName)||(o.textContent=e[t],this.options.debug&&console.log(`Translated ${t} → "${e[t]}"`)),o.hasAttribute("placeholder")&&e[t].placeholder&&(o.setAttribute("placeholder",e[t].placeholder),this.options.debug&&console.log(`Translated placeholder for ${t} → "${e[t].placeholder}"`))}))})),this.options.debug&&console.log(`Translations applied for language: ${t}`)})).catch((e=>{console.error(`Failed to load translations: ${e}`)}))}cleanUpMktoElements(e){if(!Array.isArray(this.options.removeElems)||0===this.options.removeElems.length)return;const t=e.getFormElem()[0];this.options.removeElems.forEach((e=>{const o=t.querySelectorAll(e);o.forEach((e=>e.remove())),this.options.debug&&o.length&&console.log(`Removed ${o.length} elements matching: "${e}"`)}))}processUrlParams(e){if(!this.options.urlParamsToHiddenFields)return;const t=this.options.urlParamsToHiddenFieldsConfig;if(!t||"object"!=typeof t)return;const o=e.getFormElem()[0],s=new URLSearchParams(window.location.search),i={};Object.entries(t.mapping).forEach((([e,o])=>{if(t.excludeList.includes(e))return;let n=null;if(t.cookiesFirst&&t.cookiesFirst.prefix){const o=`${t.cookiesFirst.prefix}${e}`;n=this.getCookie(o)}n||(n=s.get(e)),n&&(i[o]=n)})),Object.entries(i).forEach((([e,t])=>{let s=o.querySelector(`input[name="${e}"]`);s||(s=document.createElement("input"),s.type="hidden",s.name=e,o.appendChild(s)),s.value=t,this.options.debug&&console.log(`Set hidden field "${e}" with value: ${t}`)}))}setupToggleDisabling(e){const t=e.getFormElem()[0];this.options.radios&&Object.keys(this.options.radios).forEach((e=>{const o=this.options.radios[e];if("toggleDisabling"!==o.behavior)return;const s=t.querySelectorAll(`input[name="${e}"]`);if(!s.length)return;const i=Array.from(s).find((e=>e.value===o.relations.yesValue)),n=Array.from(s).find((e=>e.value===o.relations.noValue)),r=t.querySelectorAll(`input[name="${o.relations.targetCheckboxList}"]`);if(!i||!n||!r.length)return;const l=e=>{r.forEach((t=>{t.disabled=e,e&&(t.checked=!1)}))};l(n.checked),i.addEventListener("change",(()=>l(!1))),n.addEventListener("change",(()=>l(!0)))})),this.options.checkBoxes&&Object.keys(this.options.checkBoxes).forEach((e=>{const o=this.options.checkBoxes[e];if("toggleDisabling"!==o.behavior)return;const s=t.querySelectorAll(`input[name="${e}"]`);if(!s.length)return;const i=Array.from(s).find((e=>e.value===o.relations.fullDayValue)),n=s.filter((e=>o.relations.disableOnChecked.includes(e.value)));if(!i||!n.length)return;const r=e=>{n.forEach((t=>{t.disabled=e,e&&(t.checked=!1)}))};r(i.checked),i.addEventListener("change",(()=>{r(i.checked)}))}))}slugify(e){return e.toLowerCase().replace(/[\s]+/g,"-").replace(/[^\w-]+/g,"")}getCookie(e){const t=document.cookie.match(new RegExp("(^| )"+e+"=([^;]+)"));return t?decodeURIComponent(t[2]):null}async sha256(e){const t=undefined,o=(new TextEncoder).encode(e),s=await crypto.subtle.digest("SHA-256",o);return Array.from(new Uint8Array(s)).map((e=>e.toString(16).padStart(2,"0"))).join("")}async pushToDataLayer(e,t={}){if(!this.options.dataLayerTracking||!this.options.dataLayerConfig)return;if(!this.form)return void console.warn("⚠️ pushToDataLayer: Form is not initialized yet.");const o=this.options.dataLayerConfig;if(!e)return;window.dataLayer=window.dataLayer||[];const s={event:e,formID:this.formID};if(o.additionalData.includeReferrer&&(s.requestReferrerUrl=document.referrer||window.location.href),o.additionalData.includeUserEmail){const e=undefined,t=this.form.getFormElem()[0].querySelector(`input[name="${o.additionalData.includeUserEmail}"]`);if(t&&t.value){const e=t.value.trim().toLowerCase();o.additionalData.hashEmail?s.userEmailHashed=await this.sha256(e):s.userEmail=e}}Object.assign(s,t),window.dataLayer.push(s),this.options.debug&&console.log(`DataLayer Event: ${e}`,s)}executeCustomBehaviorsOnFormReady(e){this.options.customBehaviorsOnFormReady&&"object"==typeof this.options.customBehaviorsOnFormReady&&Object.keys(this.options.customBehaviorsOnFormReady).forEach((t=>{const o=this.options.customBehaviorsOnFormReady[t];"function"==typeof o?(this.options.debug&&console.log(`🔹 Executing custom behavior On Form Ready: ${t}`),o(e)):console.warn(`⚠️ Custom On Form Ready behavior "${t}" is not a function.`)}))}executeCustomBehaviorsOnFormSuccess(e){this.options.customBehaviorsOnFormSuccess&&"object"==typeof this.options.customBehaviorsOnFormSuccess&&Object.keys(this.options.customBehaviorsOnFormSuccess).forEach((t=>{const o=this.options.customBehaviorsOnFormSuccess[t];"function"==typeof o?(this.options.debug&&console.log(`🔹 Executing custom behavior On Form Success: ${t}`),o(e)):console.warn(`⚠️ Custom On Form Success behavior "${t}" is not a function.`)}))}executeCustomBehaviorsOnFormPrefill(e){this.options.customBehaviorsOnFormPrefill&&"object"==typeof this.options.customBehaviorsOnFormPrefill&&Object.keys(this.options.customBehaviorsOnFormPrefill).forEach((t=>{const o=this.options.customBehaviorsOnFormPrefill[t];"function"==typeof o?(this.options.debug&&console.log(`🔹 Executing custom behavior On Form Prefill: ${t}`),o(e)):console.warn(`⚠️ Custom On Form Prefill behavior "${t}" is not a function.`)}))}}